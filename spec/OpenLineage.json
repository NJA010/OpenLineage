{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://openlineage.io/spec/1-15-0/OpenLineage.json",
  "$defs": {
    "RunEvent": {
      "type": "object",
      "properties": {
        "eventType": {
          "description": "the current transition of the run state. It is required to issue 1 START event and 1 of [ COMPLETE, ABORT, FAIL ] event per run. Additional events with OTHER eventType can be added to the same run. For example to send additional metadata after the run is complete",
          "type": "string",
          "enum": [
            "START",
            "RUNNING",
            "COMPLETE",
            "ABORT",
            "FAIL",
            "OTHER"
          ],
          "example": "START|RUNNING|COMPLETE|ABORT|FAIL|OTHER"
        },
        "eventTime": {
          "description": "the time the event occurred at",
          "type": "string",
          "format": "date-time"
        },
        "run": {
          "$ref": "#/$defs/Run"
        },
        "job": {
          "$ref": "#/$defs/Job"
        },
        "inputs": {
          "description": "The set of **input** datasets.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/InputDataset"
          }
        },
        "outputs": {
          "description": "The set of **output** datasets.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/OutputDataset"
          }
        },
        "producer": {
          "description": "URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",
          "type": "string",
          "format": "uri",
          "example": "https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"
        },
        "schemaURL": {
          "description": "The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this RunEvent",
          "type": "string",
          "format": "uri",
          "example": "https://openlineage.io/spec/1-0-0/OpenLineage.json"
        }
      },
      "required": [
        "run",
        "job",
        "eventTime",
        "producer",
        "schemaURL"
      ]
    },
    "Run": {
      "type": "object",
      "properties": {
        "runId": {
          "description": "The globally unique ID of the run associated with the job.",
          "type": "string",
          "format": "uuid"
        },
        "facets": {
          "description": "The run facets.",
          "type": "object",
          "allOf": [
            { "$ref": "facets/ErrorMessageRunFacet.json" },
            { "$ref": "facets/ExternalQueryRunFacet.json" },
            { "$ref": "facets/NominalTimeRunFacet.json" },
            { "$ref": "facets/ParentRunFacet.json" }
          ],
          "additionalProperties": {
            "$ref": "#/$defs/RunFacet"
          }
        }
      },
      "required": [
        "runId"
      ]
    },
    "RunFacet": {
      "description": "A Run Facet",
      "type": "object",
      "allOf": [
        { "$ref": "#/$defs/BaseFacet" }
      ]
    },
    "Job": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "The namespace containing that job",
          "type": "string",
          "example": "my-scheduler-namespace"
        },
        "name": {
          "description": "The unique name for that job within that namespace",
          "type": "string",
          "example": "myjob.mytask"
        },
        "facets": {
          "description": "The job facets.",
          "type": "object",
          "allOf": [
            { "$ref": "facets/DocumentationJobFacet.json" },
            { "$ref": "facets/OwnershipJobFacet.json" },
            { "$ref": "facets/SourceCodeJobFacet.json" },
            { "$ref": "facets/SourceCodeLocationJobFacet.json" },
            { "$ref": "facets/SQLJobFacet.json" }
          ],
          "additionalProperties": {
            "$ref": "#/$defs/JobFacet"
          }
        }
      },
      "required": [
        "namespace",
        "name"
      ]
    },
    "JobFacet": {
      "description": "A Job Facet",
      "type": "object",
      "allOf": [
        { "$ref": "#/$defs/BaseFacet" }
      ]
    },
    "InputDataset": {
      "description": "An input dataset",
      "type": "object",
      "allOf": [
        { "$ref": "#/$defs/Dataset" }
      ],
      "properties": {
        "inputFacets": { "$ref": "#/$defs/InputDatasetFacet" }
      }
    },
    "InputDatasetFacet": {
      "description": "Input dataset specific facets",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/DatasetFacet"
      },
      "allOf": [
        { "$ref": "facets/DataQualityMetricsInputDatasetFacet.json"}
      ]
    },
    "OutputDataset": {
      "description": "An output dataset",
      "type": "object",
      "allOf": [
        { "$ref": "#/$defs/Dataset" }
      ],
      "properties": {
        "outputFacets": { "$ref": "#/$defs/OutputDatasetFacet" }
      }
    },
    "OutputDatasetFacet": {
      "description": "Output dataset specific facets",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/DatasetFacet"
      },
      "allOf": [
        { "$ref": "facets/OutputStatisticsOutputDatasetFacet.json"}
      ]
    },
    "Dataset": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "The namespace containing that dataset",
          "type": "string",
          "example": "my-datasource-namespace"
        },
        "name": {
          "description": "The unique name for that dataset within that namespace",
          "type": "string",
          "example": "instance.schema.table"
        },
        "facets": {
          "description": "The common facets for this dataset",
          "type": "object",
          "allOf": [
            { "$ref": "facets/ColumnLineageDatasetFacet.json" },
            { "$ref": "facets/DatasourceDatasetFacet.json" },
            { "$ref": "facets/DataQualityAssertionsDatasetFacet.json" },
            { "$ref": "facets/LifecycleStateChangeDatasetFacet.json" },
            { "$ref": "facets/OwnershipDatasetFacet.json" },
            { "$ref": "facets/SchemaDatasetFacet.json" },
            { "$ref": "facets/StorageDatasetFacet.json" },
            { "$ref": "facets/SymlinksDatasetFacet.json" },
            { "$ref": "facets/DatasetVersionDatasetFacet.json" }
          ],
          "additionalProperties": {
            "$ref": "#/$defs/DatasetFacet"
          }
        }
      },
      "required": [
        "namespace",
        "name"
      ]
    },
    "DatasetFacet": {
      "description": "A Dataset Facet",
      "type": "object",
      "allOf": [
        { "$ref": "#/$defs/BaseFacet" }
      ]
     },
    "BaseFacet": {
      "description": "all fields of the base facet are prefixed with _ to avoid name conflicts in facets",
      "type": "object",
      "properties": {
        "_producer": {
          "description": "URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",
          "type": "string",
          "format": "uri",
          "example": "https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"
        },
        "_schemaURL": {
          "description": "The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",
          "type": "string",
          "format": "uri",
          "example": "https://openlineage.io/spec/1-0-0/OpenLineage.json#/$defs/BaseFacet"
        }
      },
      "additionalProperties": true,
      "required": [
        "_producer",
        "_schemaURL"
      ]
    }
  },
  "$ref": "#/$defs/RunEvent"
}
